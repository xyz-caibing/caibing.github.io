<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>买了个菜饼</title>
  <icon>https://www.gravatar.com/avatar/f0a7280f0ab61c9b5701ac3a6fcb0ab9</icon>
  <subtitle>坚持养成习惯</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="//caibing.github.io/"/>
  <updated>2020-09-12T00:52:41.092Z</updated>
  <id>//caibing.github.io/</id>
  
  <author>
    <name>菜饼</name>
    <email>xyz-caibing@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>lt takes a village</title>
    <link href="//caibing.github.io/2020/09/12/village-2020/"/>
    <id>//caibing.github.io/2020/09/12/village-2020/</id>
    <published>2020-09-12T00:51:00.000Z</published>
    <updated>2020-09-12T00:52:41.092Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在今天的公司文化里，非常强调团队协作，我们要面对的工作非常复杂，几乎没有什么人能完全独当一面。同样，回到家里，养孩子也是个复杂的系统工程，聪明的女性，要学会建立一个强有力的支持系统。通常，妈妈们，不管是职场妈妈还是全职妈妈，会理所当然的认为，教育孩子的主要的职责是自己的。但即使你觉得自己负主要职责，妈妈不是，也不应该是唯一的负责人。<br>就像在公司里，想要做成事，一定要一个团队来一起做一样。我们在家里教育孩子，也需要利用一个团队。</p><h6 id="谁会是你的队友？"><a href="#谁会是你的队友？" class="headerlink" title="谁会是你的队友？"></a>谁会是你的队友？</h6><ul><li>一类是孩子的爸爸和亲戚、长辈；</li><li>第二类是友邻和朋友</li></ul><p>待续…</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;在今天的公司文化里，非常强调团队协作，我们要面对的工作非常复杂，几乎没有什么人能完全独当一面。同样，回到家里，养孩子也是个复杂的系统工程，聪
      
    
    </summary>
    
    
      <category term="培养面向未来的孩子" scheme="//caibing.github.io/tags/%E5%9F%B9%E5%85%BB%E9%9D%A2%E5%90%91%E6%9C%AA%E6%9D%A5%E7%9A%84%E5%AD%A9%E5%AD%90/"/>
    
  </entry>
  
  <entry>
    <title>面向对象的设计 总结</title>
    <link href="//caibing.github.io/2020/09/11/oop-summary-2020/"/>
    <id>//caibing.github.io/2020/09/11/oop-summary-2020/</id>
    <published>2020-09-11T08:42:00.000Z</published>
    <updated>2020-09-11T08:55:39.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>代码建模就是把业务抽象成事务（类、抽象类）和行为（接口）的过程。</p></blockquote><blockquote><p>面向对象的设计原则</p></blockquote><blockquote><p>对接口编程，不要对实现编程</p></blockquote><blockquote><p>使用对象之间的组合，减少对继承的使用</p></blockquote><blockquote><p>抽象用于不同的事务，而接口用于事物的行为</p></blockquote><blockquote><p>结论：代码建模过程就是“面向对象设计过程”的具体实现方式</p></blockquote><h6 id="设计模式的设计原则"><a href="#设计模式的设计原则" class="headerlink" title="设计模式的设计原则"></a>设计模式的设计原则</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">开闭原则：对扩展开放，对修改关闭</span><br><span class="line">依赖倒置：对接口编程，依赖于抽象而不依赖于具体</span><br><span class="line">接口隔离：使用多个接口，而不是对一个接口编程，去依赖降低耦合</span><br><span class="line">最少知道：减少内部依赖，尽可能的独立</span><br><span class="line">合成复用：多个独立的实体合成聚合，而不是使用继承</span><br><span class="line">里氏代换：超类出现的地方，派生类都可以出现</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;代码建模就是把业务抽象成事务（类、抽象类）和行为（接口）的过程。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;面向对象的设计原则&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;对接口编程，不要对实现编程
      
    
    </summary>
    
    
      <category term="面向对象总结" scheme="//caibing.github.io/tags/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E6%80%BB%E7%BB%93/"/>
    
      <category term="summary" scheme="//caibing.github.io/tags/summary/"/>
    
  </entry>
  
  <entry>
    <title>2020年的目标</title>
    <link href="//caibing.github.io/2020/09/10/my-target-2020/"/>
    <id>//caibing.github.io/2020/09/10/my-target-2020/</id>
    <published>2020-09-10T05:26:00.000Z</published>
    <updated>2020-09-10T05:41:03.000Z</updated>
    
    <content type="html"><![CDATA[<p>完善自己的技术栈：</p><ol><li>docker &amp; k8s</li><li>kafka</li></ol><p>系统架构学习：</p><ol><li>学习掌握php设计模式应用</li></ol><p>业务架构学习：</p><ol><li>设计用户体系</li><li>设计购物车体系</li><li>设计营销体系</li><li>设计交易中心</li></ol><p>待续…</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;完善自己的技术栈：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;docker &amp;amp; k8s&lt;/li&gt;
&lt;li&gt;kafka&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;系统架构学习：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;学习掌握php设计模式应用&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;业务架构学习：&lt;/p&gt;
&lt;ol&gt;
&lt;l
      
    
    </summary>
    
    
      <category term="目标" scheme="//caibing.github.io/tags/%E7%9B%AE%E6%A0%87/"/>
    
      <category term="target" scheme="//caibing.github.io/tags/target/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="//caibing.github.io/2020/09/09/hello-world/"/>
    <id>//caibing.github.io/2020/09/09/hello-world/</id>
    <published>2020-09-09T12:39:00.000Z</published>
    <updated>2020-09-10T05:44:13.000Z</updated>
    
    <content type="html"><![CDATA[<p>在Winiex的推荐和帮助下，这个octopress博客终于搭建起来了。</p><p>折腾了两天多，在github page上看到自己的博客加载下来时，突然有种错综复杂的恍惚感。是的，它不是qq空间，不是新浪博客，不是豆瓣小站，也不是贴吧。它更像是属于自己的一块小小的领地，因而我满足于这种归属感。我愿在上面安静劳作。</p><p>一个农民，通过自身努力终于分到了一块地，不再需要在地主的土地上创造流量价值时，于是翻身作主的他可以宣告说：Hello World。当然这个农民确切来说是个码农。</p><p>感谢Zespia提供的slash主题。我很喜欢这种色调。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在Winiex的推荐和帮助下，这个octopress博客终于搭建起来了。&lt;/p&gt;
&lt;p&gt;折腾了两天多，在github page上看到自己的博客加载下来时，突然有种错综复杂的恍惚感。是的，它不是qq空间，不是新浪博客，不是豆瓣小站，也不是贴吧。它更像是属于自己的一块小小的领地
      
    
    </summary>
    
    
      <category term="杂谈" scheme="//caibing.github.io/tags/%E6%9D%82%E8%B0%88/"/>
    
      <category term="octopress" scheme="//caibing.github.io/tags/octopress/"/>
    
  </entry>
  
</feed>
